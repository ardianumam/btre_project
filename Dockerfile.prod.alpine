# define base image
FROM python:3.9-alpine

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
# RUN addgroup --system app && adduser --system --group app
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories and set the working dir
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
# PYTHONDONTWRITEBYTECODE: Prevents Python from writing pyc files to disc (equivalent to python -B option)
# PYTHONUNBUFFERED: Prevents Python from buffering stdout and stderr (equivalent to python -u option)

# install dependencies
RUN apk add --update --no-cache netcat-openbsd && \
    apk add postgresql-dev gcc python3-dev musl-dev && \ 
    apk add --no-cache zlib-dev jpeg-dev


# install dependencies
COPY ./requirements.txt $APP_HOME
RUN pip install -r requirements.txt

# remove build dependencies
RUN apk --purge del .build-deps

# copy entrypoint.prod.sh
# COPY ./entrypoint.prod.sh .

# copy the project files
COPY . .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh

# chown (change owner) all the files to the app user
RUN chown -R app:app $APP_HOME
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# change to the app user
USER app

# create static and media dirs
RUN mkdir -p $APP_HOME/static
RUN mkdir -p $APP_HOME/media

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]